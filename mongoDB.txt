0) crear una base de datos llamada ecommerce que contenga dos colecciones: mensajes y productos.
1) Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El formato de los
documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 
Definir las claves de los documentos en relación a los campos de las tablas de esa base. En el caso de los
productos, poner valores al campo precio entre los 100 y 5000 pesos(eligiendo valores intermedios, ej: 120,
580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990). 

// use ecommerce
// db.mensajes.insert([
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje1!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje2!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje3!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje4!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje5!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje6!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje7!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje8!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje9!'},
    {email: 'Carla@gmail.com', date: ISODate(), mensaje: 'pruebaMensaje10!'}
    ])

//db.productos.insert([
    { title: 'banana', price: 120, thumbnail: 'https://cdn3.iconfinder.com/data/icons/fruits-52/150/icon_fruit_banana-256.png'},
    { title: 'anana', price: 150, thumbnail: 'https://cdn3.iconfinder.com/data/icons/fruits-52/150/icon_fruit_abacaxi-256.png'},
    { title: 'uvas', price: 150, thumbnail: 'https://cdn3.iconfinder.com/data/icons/fruits-52/150/icon_fruit_uvas-256.png'},
    { title: 'frutilla', price: 170, thumbnail: 'https://cdn3.iconfinder.com/data/icons/fruits-52/150/icon_fruit_morango-256.png'},
    { title: 'palta', price: 300, thumbnail: 'https://cdn4.iconfinder.com/data/icons/fruits-79/48/20-avocado-1024.png'},
    { title: 'arandanos', price: 190, thumbnail: 'https://cdn4.iconfinder.com/data/icons/fruits-79/48/24-blueberry-1024.png'},
    { title: 'naranja', price: 140, thumbnail: 'https://cdn4.iconfinder.com/data/icons/fruits-79/48/08-orange-1024.png'},
    { title: 'cereza', price: 160, thumbnail: 'https://cdn4.iconfinder.com/data/icons/fruits-79/48/05-cherry-1024.png'},
    { title: 'pomelo', price: 180, thumbnail: 'https://cdn4.iconfinder.com/data/icons/fruits-79/48/03-grapefruit-1024.png'},
    { title: 'sandia', price: 250, thumbnail: 'https://cdn4.iconfinder.com/data/icons/fruits-79/48/01-watermelon-1024.png'},
    ])


2) Listar todos los documentos en cada colección.

//db.mensajes.find().pretty()
//db.productos.find().pretty()

3) Mostrar la cantidad de documentos almacenados en cada una de ellas.

//db.mensajes.countDocuments()
//db.productos.countDocuments()

----------------------------CRUD------------------------------

1)Agregar un producto más en la colección de productos

//db.productos.insertOne({ title: 'durazno', price: 130, thumbnail: 'https://cdn2.iconfinder.com/data/icons/fruit-and-vegetable-64/340/fruit_vegan_peach_juicy_leaf-1024.png'})

2)Realizar una consulta por nombre de producto específico:
Listar los productos con precio menor a 1000 pesos.
//db.productos.find({price: {$lt:1000}})

Listar los productos con precio entre los 1000 a 3000 pesos.
db.productos.find({price:{$gte:1000, $lte:3000 }}

Listar los productos con precio mayor a 3000 pesos.
db.productos.find({price:{$gt: 3000 }}) 

Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
//db.productos.find().sort({price:1}).skip(2).limit(1)

3)Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
//db.productos.updateMany({},{$set:{"stock":100}})

4)Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
db.productos.updateMany({price: {$gt:4000}},{$set:{stock:0}})

5)Borrar los productos con precio menor a 1000 pesos 
db.productos.deleteMany({precio:{$lt:1000}})

6)Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.
// use admin
//db.createUser({user: "pepe", pwd: "asd456", roles: [{role: "read", db: "ecommerce"}]})
